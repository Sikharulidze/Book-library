<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>SEARCH BOOKS</title>
  
  <link rel="stylesheet" href="/styles.css">
  
</head>
<body class="search-page">
    

    <a href="/mariam-sikharulidze" class="name-link">
        <h1 class="about">MARIAM SIKHARULIDZE</h1>
    </a>

    <h2 class="search2">SEARCH:</h2>

    <div class="search-container">
        <input type="text" id="search-bar" placeholder="Type to search..." />
    </div>

    <hr class="search-hr">


    <div class="search-results-container">
      
    <div id="search-results">
        <ul id="results-list"></ul>
        <button id="load-more-button" style="display: none;">Load more results</button>
    </div>
</div>


<script>
  let currentPage = 1;
  let query = ''; 

  
  document.getElementById('search-bar').addEventListener('input', async function () {
    query = this.value.trim();

    if (query.length === 0) {
      
      document.getElementById('results-list').innerHTML = '';
      document.getElementById('load-more-button').style.display = 'none';
      return;
    }

    currentPage = 1; 
    await loadResults(query, currentPage);
  });

  
  async function loadResults(query, page) {
    try {
      const response = await fetch(`/api/search?q=${encodeURIComponent(query)}&page=${page}`);
      const books = await response.json();

      
      const resultsHTML = books.map(book => {
        const highlightedNotes = highlightTerm(book.notes, query);
        return `
          <li class="book-item">
            <div class="book-content">
              <img src="/images/${book.image}" alt="${book.title} cover" class="book-image">
              <div class="book-details">
                <h3 class="book-title">${book.title}</h3>
                <p class="book-notes">${highlightedNotes}</p>
              </div>
            </div>
          </li>
          <hr class="book-separator">
        `;
      }).join('');

      const resultsList = document.getElementById('results-list');
      
      if (page === 1) {
        resultsList.innerHTML = resultsHTML;
      } else {
        resultsList.innerHTML += resultsHTML; 
      }

      if (books.length === 5) {
        document.getElementById('load-more-button').style.display = 'block';
      }

      
      document.getElementById('load-more-button').onclick = async function () {
        currentPage += 1;
        await loadResults(query, currentPage);
      };
    } catch (error) {
      console.error('Error fetching search results:', error);
    }
  }

  
  function highlightTerm(text, term) {
    const regex = new RegExp(`(${term})`, 'gi');
    return text.replace(regex, '<span class="highlight">$1</span>');
  }
</script>

</body>
</html>
